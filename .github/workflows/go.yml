name: build and test

on:
  push:
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.14
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Build
      run: go build -v .

    - name: Lint
      uses: golangci/golangci-lint-action@v1
      with:
        # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
        version: v1.29

    - name: Run Unit tests.
      run: go test  ./... -v -covermode=count -coverprofile=coverage.txt

    - name: Upload Coverage report to CodeCov
      uses: codecov/codecov-action@v1.0.0
      with:
        token: 0db72849-5eff-4630-84c2-2fa22ab43f6d
        file: ./coverage.txt

  release:
    name: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14

      - name: set GOVERSION
        run: echo "::set-env name=GOVERSION::$(go version | sed -r 's/go version go(.*)\ .*/\1/')"

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
