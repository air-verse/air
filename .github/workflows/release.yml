name: release

on:
  push:
  pull_request:
    branches: [ master ]

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.17
      - name: set GOVERSION
        run: echo "GOVERSION=$(go version | sed -r 's/go version go(.*)\ .*/\1/')" >> $GITHUB_ENV
      - name: set AirVersion
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: show version
        run: echo ${{ env.GOVERSION }} ${{ env.VERSION }}

      - name: run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: push to docker hub
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: cosmtrek/air:${{ env.VERSION }}
      - name: show docker image digest
        run: echo ${{ steps.docker_build.outputs.digest }}